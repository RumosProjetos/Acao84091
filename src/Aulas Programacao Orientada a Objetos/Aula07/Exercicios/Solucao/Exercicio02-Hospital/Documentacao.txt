Vamos criar um exemplo de exercício de programação orientada a objetos em C# para representar entidades relacionadas a um hospital. Vamos criar classes para `Paciente` e `Medico` com alguns métodos relacionados. Além disso, podemos criar uma classe `Consulta` que associa um médico a um paciente para simular uma consulta médica.



```csharp

using System;



class Pessoa

{

    public string Nome { get; set; }

    public int Idade { get; set; }



    public Pessoa(string nome, int idade)

    {

        Nome = nome;

        Idade = idade;

    }



    public virtual void ExibirInformacoes()

    {

        Console.WriteLine($"Nome: {Nome}, Idade: {Idade} anos.");

    }

}



class Paciente : Pessoa

{

    public string HistoricoClinico { get; set; }



    public Paciente(string nome, int idade, string historicoClinico) : base(nome, idade)

    {

        HistoricoClinico = historicoClinico;

    }



    public override void ExibirInformacoes()

    {

        base.ExibirInformacoes();

        Console.WriteLine($"Histórico Clínico: {HistoricoClinico}");

    }

}



class Medico : Pessoa

{

    public string Especialidade { get; set; }



    public Medico(string nome, int idade, string especialidade) : base(nome, idade)

    {

        Especialidade = especialidade;

    }



    public override void ExibirInformacoes()

    {

        base.ExibirInformacoes();

        Console.WriteLine($"Especialidade: {Especialidade}");

    }



    public void PrescreverMedicacao(Paciente paciente)

    {

        Console.WriteLine($"O médico {Nome} prescreveu medicamentos para o paciente {paciente.Nome}.");

    }

}



class Consulta

{

    public Medico Medico { get; set; }

    public Paciente Paciente { get; set; }

    public DateTime DataConsulta { get; set; }



    public Consulta(Medico medico, Paciente paciente, DateTime dataConsulta)

    {

        Medico = medico;

        Paciente = paciente;

        DataConsulta = dataConsulta;

    }



    public void RealizarConsulta()

    {

        Console.WriteLine($"Consulta realizada em {DataConsulta} pelo médico {Medico.Nome} para o paciente {Paciente.Nome}.");

        Medico.PrescreverMedicacao(Paciente);

    }

}



class Program

{

    static void Main()

    {

        Paciente paciente = new Paciente("João", 30, "Hipertensão");

        Medico medico = new Medico("Dr. Silva", 40, "Cardiologista");



        Consulta consulta = new Consulta(medico, paciente, DateTime.Now);

        consulta.RealizarConsulta();



        Console.WriteLine("\nDetalhes do Paciente:");

        paciente.ExibirInformacoes();



        Console.WriteLine("\nDetalhes do Médico:");

        medico.ExibirInformacoes();

    }

}

```



Neste exemplo, temos as classes `Pessoa`, `Paciente` e `Medico`, cada uma com seus atributos e métodos. A classe `Consulta` associa um médico a um paciente e permite realizar uma consulta médica, incluindo a prescrição de medicamentos. O programa principal demonstra a criação de um paciente, um médico e uma consulta, exibindo as informações associadas.



Agora pede-se:

Vamos criar a classe medicamentos, e criar atributos nas classes paciente e consulta identificando que medicamentos foram prescritos para cada paciente em cada consulta.

Lembre-se que um medicamento possui a dosagem recomendada e as características do próprio medicamento (pode ser líquido, comprimido, injeção ...)...



Sejam criativos. :-)